swagger: '2.0'
info:
  description: 'standard public schema'
  title: 'PostgREST API'
  version: '10.2.0 (e07807d)'
host: 'localhost:3000'
basePath: '/'
schemes:
  - 'http'
consumes:
  - 'application/json'
  - 'application/vnd.pgrst.object+json'
  - 'text/csv'
produces:
  - 'application/json'
  - 'application/vnd.pgrst.object+json'
  - 'text/csv'
paths:
  /:
    get:
      tags:
        - 'Introspection'
      summary: 'OpenAPI description (this document)'
      produces:
        - 'application/openapi+json'
        - 'application/json'
      responses:
        200:
          description: 'OK'
  /trees:
    get:
      tags:
        - 'trees'
      parameters:
        - $ref: '#/parameters/rowFilter.trees.id'
        - $ref: '#/parameters/rowFilter.trees.name'
        - $ref: '#/parameters/rowFilter.trees.description'
        - $ref: '#/parameters/rowFilter.trees.userId'
        - $ref: '#/parameters/rowFilter.trees.forks'
        - $ref: '#/parameters/rowFilter.trees.isPublic'
        - $ref: '#/parameters/rowFilter.trees.isDeleted'
        - $ref: '#/parameters/rowFilter.trees.createdAt'
        - $ref: '#/parameters/rowFilter.trees.updatedAt'
        - $ref: '#/parameters/select'
        - $ref: '#/parameters/order'
        - $ref: '#/parameters/range'
        - $ref: '#/parameters/rangeUnit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/preferCount'
      responses:
        200:
          description: 'OK'
          schema:
            items:
              $ref: '#/definitions/trees'
            type: 'array'
        206:
          description: 'Partial Content'
    post:
      tags:
        - 'trees'
      parameters:
        - $ref: '#/parameters/body.trees'
        - $ref: '#/parameters/select'
        - $ref: '#/parameters/preferPost'
      responses:
        201:
          description: 'Created'
    delete:
      tags:
        - 'trees'
      parameters:
        - $ref: '#/parameters/rowFilter.trees.id'
        - $ref: '#/parameters/rowFilter.trees.name'
        - $ref: '#/parameters/rowFilter.trees.description'
        - $ref: '#/parameters/rowFilter.trees.userId'
        - $ref: '#/parameters/rowFilter.trees.forks'
        - $ref: '#/parameters/rowFilter.trees.isPublic'
        - $ref: '#/parameters/rowFilter.trees.isDeleted'
        - $ref: '#/parameters/rowFilter.trees.createdAt'
        - $ref: '#/parameters/rowFilter.trees.updatedAt'
        - $ref: '#/parameters/preferReturn'
      responses:
        204:
          description: 'No Content'
    patch:
      tags:
        - 'trees'
      parameters:
        - $ref: '#/parameters/rowFilter.trees.id'
        - $ref: '#/parameters/rowFilter.trees.name'
        - $ref: '#/parameters/rowFilter.trees.description'
        - $ref: '#/parameters/rowFilter.trees.userId'
        - $ref: '#/parameters/rowFilter.trees.forks'
        - $ref: '#/parameters/rowFilter.trees.isPublic'
        - $ref: '#/parameters/rowFilter.trees.isDeleted'
        - $ref: '#/parameters/rowFilter.trees.createdAt'
        - $ref: '#/parameters/rowFilter.trees.updatedAt'
        - $ref: '#/parameters/body.trees'
        - $ref: '#/parameters/preferReturn'
      responses:
        204:
          description: 'No Content'
  /messages:
    get:
      tags:
        - 'messages'
      parameters:
        - $ref: '#/parameters/rowFilter.messages.id'
        - $ref: '#/parameters/rowFilter.messages.treeId'
        - $ref: '#/parameters/rowFilter.messages.parent'
        - $ref: '#/parameters/rowFilter.messages.content'
        - $ref: '#/parameters/rowFilter.messages.tokens'
        - $ref: '#/parameters/rowFilter.messages.role'
        - $ref: '#/parameters/rowFilter.messages.isDeleted'
        - $ref: '#/parameters/rowFilter.messages.createdAt'
        - $ref: '#/parameters/rowFilter.messages.updatedAt'
        - $ref: '#/parameters/rowFilter.messages.userId'
        - $ref: '#/parameters/rowFilter.messages.isTemplate'
        - $ref: '#/parameters/rowFilter.messages.templateId'
        - $ref: '#/parameters/select'
        - $ref: '#/parameters/order'
        - $ref: '#/parameters/range'
        - $ref: '#/parameters/rangeUnit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/preferCount'
      responses:
        200:
          description: 'OK'
          schema:
            items:
              $ref: '#/definitions/messages'
            type: 'array'
        206:
          description: 'Partial Content'
    post:
      tags:
        - 'messages'
      parameters:
        - $ref: '#/parameters/body.messages'
        - $ref: '#/parameters/select'
        - $ref: '#/parameters/preferPost'
      responses:
        201:
          description: 'Created'
    delete:
      tags:
        - 'messages'
      parameters:
        - $ref: '#/parameters/rowFilter.messages.id'
        - $ref: '#/parameters/rowFilter.messages.treeId'
        - $ref: '#/parameters/rowFilter.messages.parent'
        - $ref: '#/parameters/rowFilter.messages.content'
        - $ref: '#/parameters/rowFilter.messages.tokens'
        - $ref: '#/parameters/rowFilter.messages.role'
        - $ref: '#/parameters/rowFilter.messages.isDeleted'
        - $ref: '#/parameters/rowFilter.messages.createdAt'
        - $ref: '#/parameters/rowFilter.messages.updatedAt'
        - $ref: '#/parameters/rowFilter.messages.userId'
        - $ref: '#/parameters/rowFilter.messages.isTemplate'
        - $ref: '#/parameters/rowFilter.messages.templateId'
        - $ref: '#/parameters/preferReturn'
      responses:
        204:
          description: 'No Content'
    patch:
      tags:
        - 'messages'
      parameters:
        - $ref: '#/parameters/rowFilter.messages.id'
        - $ref: '#/parameters/rowFilter.messages.treeId'
        - $ref: '#/parameters/rowFilter.messages.parent'
        - $ref: '#/parameters/rowFilter.messages.content'
        - $ref: '#/parameters/rowFilter.messages.tokens'
        - $ref: '#/parameters/rowFilter.messages.role'
        - $ref: '#/parameters/rowFilter.messages.isDeleted'
        - $ref: '#/parameters/rowFilter.messages.createdAt'
        - $ref: '#/parameters/rowFilter.messages.updatedAt'
        - $ref: '#/parameters/rowFilter.messages.userId'
        - $ref: '#/parameters/rowFilter.messages.isTemplate'
        - $ref: '#/parameters/rowFilter.messages.templateId'
        - $ref: '#/parameters/body.messages'
        - $ref: '#/parameters/preferReturn'
      responses:
        204:
          description: 'No Content'
definitions:
  trees:
    required:
      - 'id'
      - 'userId'
      - 'forks'
      - 'isPublic'
      - 'isDeleted'
      - 'createdAt'
      - 'updatedAt'
    properties:
      id:
        default: 'gen_random_uuid()'
        description: "Note:\nThis is a Primary Key.<pk/>"
        format: 'uuid'
        type: 'string'
      name:
        format: 'text'
        type: 'string'
      description:
        format: 'text'
        type: 'string'
      userId:
        default: 'auth.uid()'
        format: 'uuid'
        type: 'string'
      forks:
        default: 0
        format: 'integer'
        type: 'integer'
      isPublic:
        default: false
        format: 'boolean'
        type: 'boolean'
      isDeleted:
        default: false
        format: 'boolean'
        type: 'boolean'
      createdAt:
        default: 'now()'
        format: 'timestamp with time zone'
        type: 'string'
      updatedAt:
        default: 'now()'
        format: 'timestamp with time zone'
        type: 'string'
    type: 'object'
  messages:
    required:
      - 'id'
      - 'treeId'
      - 'content'
      - 'isDeleted'
      - 'createdAt'
      - 'updatedAt'
      - 'userId'
      - 'isTemplate'
    properties:
      id:
        description: "Note:\nThis is a Primary Key.<pk/>"
        format: 'uuid'
        type: 'string'
      treeId:
        description: "Note:\nThis is a Foreign Key to `trees.id`.<fk table='trees' column='id'/>"
        format: 'uuid'
        type: 'string'
      parent:
        description: "Note:\nThis is a Foreign Key to `messages.id`.<fk table='messages' column='id'/>"
        format: 'uuid'
        type: 'string'
      content:
        format: 'text'
        type: 'string'
      tokens:
        format: 'integer'
        type: 'integer'
      role:
        format: 'text'
        type: 'string'
      isDeleted:
        default: false
        format: 'boolean'
        type: 'boolean'
      createdAt:
        default: 'now()'
        format: 'timestamp with time zone'
        type: 'string'
      updatedAt:
        default: 'now()'
        format: 'timestamp with time zone'
        type: 'string'
      userId:
        default: 'auth.uid()'
        format: 'uuid'
        type: 'string'
      isTemplate:
        default: false
        format: 'boolean'
        type: 'boolean'
      templateId:
        description: "Note:\nThis is a Foreign Key to `messages.id`.<fk table='messages' column='id'/>"
        format: 'uuid'
        type: 'string'
    type: 'object'
parameters:
  preferParams:
    name: 'Prefer'
    description: 'Preference'
    required: false
    enum:
      - 'params=single-object'
    in: 'header'
    type: 'string'
  preferReturn:
    name: 'Prefer'
    description: 'Preference'
    required: false
    enum:
      - 'return=representation'
      - 'return=minimal'
      - 'return=none'
    in: 'header'
    type: 'string'
  preferCount:
    name: 'Prefer'
    description: 'Preference'
    required: false
    enum:
      - 'count=none'
    in: 'header'
    type: 'string'
  preferPost:
    name: 'Prefer'
    description: 'Preference'
    required: false
    enum:
      - 'return=representation'
      - 'return=minimal'
      - 'return=none'
      - 'resolution=ignore-duplicates'
      - 'resolution=merge-duplicates'
    in: 'header'
    type: 'string'
  select:
    name: 'select'
    description: 'Filtering Columns'
    required: false
    in: 'query'
    type: 'string'
  on_conflict:
    name: 'on_conflict'
    description: 'On Conflict'
    required: false
    in: 'query'
    type: 'string'
  order:
    name: 'order'
    description: 'Ordering'
    required: false
    in: 'query'
    type: 'string'
  range:
    name: 'Range'
    description: 'Limiting and Pagination'
    required: false
    in: 'header'
    type: 'string'
  rangeUnit:
    name: 'Range-Unit'
    description: 'Limiting and Pagination'
    required: false
    default: 'items'
    in: 'header'
    type: 'string'
  offset:
    name: 'offset'
    description: 'Limiting and Pagination'
    required: false
    in: 'query'
    type: 'string'
  limit:
    name: 'limit'
    description: 'Limiting and Pagination'
    required: false
    in: 'query'
    type: 'string'
  body.trees:
    name: 'trees'
    description: 'trees'
    required: false
    in: 'body'
    schema:
      $ref: '#/definitions/trees'
  rowFilter.trees.id:
    name: 'id'
    required: false
    format: 'uuid'
    in: 'query'
    type: 'string'
  rowFilter.trees.name:
    name: 'name'
    required: false
    format: 'text'
    in: 'query'
    type: 'string'
  rowFilter.trees.description:
    name: 'description'
    required: false
    format: 'text'
    in: 'query'
    type: 'string'
  rowFilter.trees.userId:
    name: 'userId'
    required: false
    format: 'uuid'
    in: 'query'
    type: 'string'
  rowFilter.trees.forks:
    name: 'forks'
    required: false
    format: 'integer'
    in: 'query'
    type: 'string'
  rowFilter.trees.isPublic:
    name: 'isPublic'
    required: false
    format: 'boolean'
    in: 'query'
    type: 'string'
  rowFilter.trees.isDeleted:
    name: 'isDeleted'
    required: false
    format: 'boolean'
    in: 'query'
    type: 'string'
  rowFilter.trees.createdAt:
    name: 'createdAt'
    required: false
    format: 'timestamp with time zone'
    in: 'query'
    type: 'string'
  rowFilter.trees.updatedAt:
    name: 'updatedAt'
    required: false
    format: 'timestamp with time zone'
    in: 'query'
    type: 'string'
  body.messages:
    name: 'messages'
    description: 'messages'
    required: false
    in: 'body'
    schema:
      $ref: '#/definitions/messages'
  rowFilter.messages.id:
    name: 'id'
    required: false
    format: 'uuid'
    in: 'query'
    type: 'string'
  rowFilter.messages.treeId:
    name: 'treeId'
    required: false
    format: 'uuid'
    in: 'query'
    type: 'string'
  rowFilter.messages.parent:
    name: 'parent'
    required: false
    format: 'uuid'
    in: 'query'
    type: 'string'
  rowFilter.messages.content:
    name: 'content'
    required: false
    format: 'text'
    in: 'query'
    type: 'string'
  rowFilter.messages.tokens:
    name: 'tokens'
    required: false
    format: 'integer'
    in: 'query'
    type: 'string'
  rowFilter.messages.role:
    name: 'role'
    required: false
    format: 'text'
    in: 'query'
    type: 'string'
  rowFilter.messages.isDeleted:
    name: 'isDeleted'
    required: false
    format: 'boolean'
    in: 'query'
    type: 'string'
  rowFilter.messages.createdAt:
    name: 'createdAt'
    required: false
    format: 'timestamp with time zone'
    in: 'query'
    type: 'string'
  rowFilter.messages.updatedAt:
    name: 'updatedAt'
    required: false
    format: 'timestamp with time zone'
    in: 'query'
    type: 'string'
  rowFilter.messages.userId:
    name: 'userId'
    required: false
    format: 'uuid'
    in: 'query'
    type: 'string'
  rowFilter.messages.isTemplate:
    name: 'isTemplate'
    required: false
    format: 'boolean'
    in: 'query'
    type: 'string'
  rowFilter.messages.templateId:
    name: 'templateId'
    required: false
    format: 'uuid'
    in: 'query'
    type: 'string'
externalDocs:
  description: 'PostgREST Documentation'
  url: 'https://postgrest.org/en/v10.2/api.html'
